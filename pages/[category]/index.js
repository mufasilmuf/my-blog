import Head from "next/head";
import React from "react";
import { gql } from "@apollo/client";

import client from '../../apollo-client';
import Header from "../../components/header/header";
import BodySection from "../../components/section/bodySection";
import Footer from "../../components/footer/footer";

const headerData = gql`
query{
  categories{
    id
    name
    slug
  }
}`;

var hostname = "https://my-blog-seven-phi.vercel.app";
var href = "https://my-blog-seven-phi.vercel.app";

if (typeof window !== 'undefined') {
    hostname = window.location.origin;
    href = window.location.href
};

const categoryData = gql`
query categories($category_slug: String!){
    categories(where:{slug: $category_slug}) {
      id
      name
      slug
      articles {
        id
        title
        slug
        description
        category{
          name
        }
        author {
          id
          name
          picture{
            url
          }
        }
        image{
          url
        }
        createdAt
      }
    }
}`;

const fetchHeaderData = async () => {
    const { data } = await client.mutate({
        mutation: headerData
    })
    return data;
}

const fetchCategoryDetails = async (slug) => {
    const { data } = await client.mutate({
        variables: { category_slug: slug },
        mutation: categoryData
    })
    return data;
}

export const getStaticPaths = async () => {
    const categories = await fetch(process.env.STRAPI_URL + '/categories');
    const data = await categories.json();
    const categoriesSlug = [];

    data.map((category) => {
        if (category.slug != '' || category.slug != null) {
            categoriesSlug.push(category.slug);
        }
    })

    const paths = categoriesSlug.map((path) => {
        return {
            params: {
                category: path
            }
        }
    })

    return {
        paths,
        fallback: false
    }
}

export const getStaticProps = async (context) => {
    const { params } = context;
    const categoryData = await fetchCategoryDetails(params.category);
    const headerData = await fetchHeaderData();

    return {
        props: {
            category: categoryData.categories,
            headers: headerData.categories
        },
    }
}

const Category = (props) => {
    const { category, headers } = props;

    return <>
        <Head>
            <title>Home</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
        </Head>
        <Header HeaderData={headers} />
        <BodySection categoryDetails={category} />
        <Footer />
    </>
}
export default Category;