import Head from "next/head";
import React from "react";

import Footer from "../../../components/footer/footer";
import Header from "../../../components/header/header";
import PostDetail from "../../../components/section/postSection";
import { fetchHeaderData } from "../../../modules/common/service";
import { fetchPostDetail, fetchRelatedPost } from "../../../modules/articles/service";
import { updateViewCount } from "../../../modules/axios-api";
import { fetchMostReadPost, fetchFeaturedVideos } from "../../../modules/widgets/service";

var hostname = "https://my-blog-seven-phi.vercel.app";
var href = "https://my-blog-seven-phi.vercel.app";

if (typeof window !== 'undefined') {
  hostname = window.location.origin;
  href = window.location.href
};

export const getStaticPaths = async () => {
  const articles = await fetch(process.env.STRAPI_URL + '/articles');
  const data = await articles.json();
  const articlestSlug = [];

  data.map((article) => {
    if (article.slug != '' || article.slug != null) {
      articlestSlug.push(article);
    }
  })

  const paths = articlestSlug.map((path) => {
    return {
      params: {
        category: path.category.slug,
        post: path.slug
      }
    }
  })

  return {
    paths,
    fallback: false
  }
}

export const getStaticProps = async (context) => {
  const { params } = context;
  const postDetail = await fetchPostDetail(params.post);
  const relatedPost = await fetchRelatedPost(params.category);
  const headerData = await fetchHeaderData();
  const mostReadPost = await fetchMostReadPost();
  const featuredVideo = await fetchFeaturedVideos();
  await updateViewCount(postDetail.articles[0].id, postDetail.articles[0].views);

  return {
    props: {
      postInfo: postDetail.articles,
      relatedPosts: relatedPost.categories,
      headers: headerData.categories,
      popularArticles: mostReadPost.articles,
      featuredVideos: featuredVideo.featuredVideos
    },
  }
}

const Articles = (props) => {
  const { postInfo, relatedPosts, headers, popularArticles, featuredVideos } = props;

  return <>
    <Head>
      <title>Home</title>
      <meta name="description" content="Generated by create next app" />
      <link rel="icon" href="/favicon.ico" />
    </Head>
    <Header HeaderData={headers} />
    <PostDetail postDetails={postInfo} relatedPost={relatedPosts[0].articles} category_slug={relatedPosts[0].slug} popularPost={popularArticles} featuredVideo={featuredVideos} />
    <Footer />
  </>
}
export default Articles;